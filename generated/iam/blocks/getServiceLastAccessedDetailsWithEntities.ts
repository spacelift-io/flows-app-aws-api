import { AppBlock, events } from "@slflows/sdk/v1";
import {
  IAMClient,
  GetServiceLastAccessedDetailsWithEntitiesCommand,
} from "@aws-sdk/client-iam";

const getServiceLastAccessedDetailsWithEntities: AppBlock = {
  name: "Get Service Last Accessed Details With Entities",
  description:
    "After you generate a group or policy report using the GenerateServiceLastAccessedDetails operation, you can use the JobId parameter in GetServiceLastAccessedDetailsWithEntities.",
  inputs: {
    default: {
      config: {
        region: {
          name: "Region",
          description: "AWS region for this operation",
          type: "string",
          required: true,
        },
        JobId: {
          name: "Job Id",
          description:
            "The ID of the request generated by the GenerateServiceLastAccessedDetails operation.",
          type: "string",
          required: true,
        },
        ServiceNamespace: {
          name: "Service Namespace",
          description:
            "The service namespace for an Amazon Web Services service.",
          type: "string",
          required: true,
        },
        MaxItems: {
          name: "Max Items",
          description:
            "Use this only when paginating results to indicate the maximum number of items you want in the response.",
          type: "number",
          required: false,
        },
        Marker: {
          name: "Marker",
          description:
            "Use this parameter only when paginating results and only after you receive a response indicating that the results are truncated.",
          type: "string",
          required: false,
        },
      },
      onEvent: async (input) => {
        const { region, ...commandInput } = input.event.inputConfig;

        const client = new IAMClient({
          region: region,
          credentials: {
            accessKeyId: input.app.config.accessKeyId,
            secretAccessKey: input.app.config.secretAccessKey,
            sessionToken: input.app.config.sessionToken,
          },
        });

        const command = new GetServiceLastAccessedDetailsWithEntitiesCommand(
          commandInput as any,
        );
        const response = await client.send(command);

        await events.emit(response || {});
      },
    },
  },
  outputs: {
    default: {
      name: "Get Service Last Accessed Details With Entities Result",
      description:
        "Result from GetServiceLastAccessedDetailsWithEntities operation",
      possiblePrimaryParents: ["default"],
      type: {
        type: "object",
        properties: {
          JobStatus: {
            type: "string",
            description: "The status of the job.",
          },
          JobCreationDate: {
            type: "string",
            description:
              "The date and time, in ISO 8601 date-time format, when the report job was created.",
          },
          JobCompletionDate: {
            type: "string",
            description:
              "The date and time, in ISO 8601 date-time format, when the generated report job was completed or failed.",
          },
          EntityDetailsList: {
            type: "array",
            items: {
              type: "object",
              properties: {
                EntityInfo: {
                  type: "object",
                  properties: {
                    Arn: {
                      type: "string",
                    },
                    Name: {
                      type: "string",
                    },
                    Type: {
                      type: "string",
                    },
                    Id: {
                      type: "string",
                    },
                    Path: {
                      type: "string",
                    },
                  },
                  required: ["Arn", "Name", "Type", "Id"],
                  additionalProperties: false,
                },
                LastAuthenticated: {
                  type: "string",
                },
              },
              required: ["EntityInfo"],
              additionalProperties: false,
            },
            description:
              "An EntityDetailsList object that contains details about when an IAM entity (user or role) used group or policy permissions in an attempt to access the specified Amazon Web Services service.",
          },
          IsTruncated: {
            type: "boolean",
            description:
              "A flag that indicates whether there are more items to return.",
          },
          Marker: {
            type: "string",
            description:
              "When IsTruncated is true, this element is present and contains the value to use for the Marker parameter in a subsequent pagination request.",
          },
          Error: {
            type: "object",
            properties: {
              Message: {
                type: "string",
              },
              Code: {
                type: "string",
              },
            },
            required: ["Message", "Code"],
            additionalProperties: false,
            description:
              "An object that contains details about the reason the operation failed.",
          },
        },
        required: [
          "JobStatus",
          "JobCreationDate",
          "JobCompletionDate",
          "EntityDetailsList",
        ],
      },
    },
  },
};

export default getServiceLastAccessedDetailsWithEntities;
